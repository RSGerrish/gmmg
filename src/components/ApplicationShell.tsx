import { AppShell, Center, createStyles, Footer, Header, Space } from "@mantine/core";
import { ReactNode, useEffect, useState } from "react";

//Components
import { FooterSimple } from "./FooterSimple";
import { HeaderMenu } from "./HeaderMenu";

const useStyles = createStyles((theme) => ({
  headerOuter: {
    borderBottom: 0,
  },
}))

type AppProps = {
  isConnected: Boolean;
  childEle: ReactNode;
}

export function ApplicationShell ({ isConnected, childEle }: AppProps) {
  const { classes } = useStyles();
  const [isLoaded, setIsLoaded] = useState(false);

  useEffect(() => {
    if (typeof window === 'object') {
      // Check if document is finally loaded
      setIsLoaded(true);
    }
  }, [])

  return(
    <>
      {isLoaded && <AppShell
        padding={32}
        header={
          <Header p="md" height={64} className={classes.headerOuter}>
            <title>GmmG</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
            <HeaderMenu 
              links={
                [
                { "link": "/about", "label": "About" },
                { "link": "/market", "label": "Farmers Market" },
                { "link": "/order", "label": "Order" },
                { "link": "/dashboard", "label": "Dashboard" },
                { "link": "/api/auth/login", "label": "Login" },
                { "link": "/api/auth/logout", "label": "Logout" },
                ]
              }
            />
          </Header>
        }
        footer={
          <Footer height={100}>
            <FooterSimple 
              links={[
                { "link": "/about", "label": "About" },
                { "link": "/market", "label": "Farmers Market" },
                { "link": "/order", "label": "Order" },
                { "link": "/dashboard", "label": "Dashboard" },
                { "link": "/api/auth/login", "label": "Login" },
                { "link": "/api/auth/logout", "label": "Logout" },
              ]}
            />
          </Footer>
        }
      >
        <Space h="xl" />
        {isConnected ? (
          <Center>
            <h2>You are connected to MongoDB</h2>
          </Center>
        ) : (
          <Center>
            <h2>You are NOT connected to MongoDB!</h2>
          </Center>
        )}
        { childEle }
        <Space h="xl" />
        <Space h="xl" />
        <Space h="xl" />
        <Space h="xl" />
        <Space h="xl" />
        <Space h="xl" />
      </AppShell>}
    </>
  )
}